#!/usr/bin/env node

var rsg = require('../lib/rsg');
var argv = require('minimist')(process.argv.slice(2));

(function() {
  if (argv.h || argv.help) {
    return require('fs').createReadStream(require('path').resolve(__dirname, 'usage.txt'))
      .pipe(process.stdout)
      .on('close', function() { process.exit(1); });
  }

  if (argv.V || argv.version) {
    return console.log(require('../package.json').version);
  }

  var opts = {
    input: argv._[0],
    output: argv.o || argv.output,
    title: argv.t || argv.title,
    root: argv.r || argv.root,
    pushstate: argv.p || argv.pushstate,
    files: argv.f || argv.files,
    config: argv.c || argv.config
  };

  if (opts.files) {
    opts.files = opts.files.split(',').map(function(part) { return part.trim(); });
  }

  rsg(opts).generate(function(err) {
    if (err) {
      console.error(String(err));
      process.exit(1);
    }

    if (argv.v || argv.verbose) {
      var gray = '\u001b[90m';
      var magenta = '\u001b[35m';
      var reset = '\u001b[0m';
      var time = '[' + gray + new Date().toLocaleTimeString() + reset + ']';
      console.log(time, magenta + this.opts.output);
    }

    process.exit(0);
  });
})();
